{"version":3,"file":"index.js","sources":["../src/redux/user/index.js","../src/lang/index.js","../src/components/Login.js","../src/components/Signup.js","../src/components/ResetPw.js","../src/components/RequestPwReset.js"],"sourcesContent":["export let login = (user) => ({\n  type: \"USER_LOGIN\",\n  user,\n});\n\nexport let logout = () => ({\n  type: \"USER_LOGOUT\",\n});\n\nexport let setLanguage = (lang) => ({\n  type: \"SET_LANGUAGE\",\n  lang,\n});\n\nconst reducer = (types) => (state = {}, action = {}) => {\n  switch (action.type) {\n    case types.USER_LOGIN.name:\n      return { ...action.user };\n    case types.USER_LOGOUT.name:\n      return {};\n    case types.SET_LANGUAGE.name:\n      return { ...state, lang: action.lang };\n    default:\n      return state;\n  }\n};\n\nconst actionNames = [logout().type, login().type, setLanguage().type];\n\nexport default {\n  reducer,\n  actionNames,\n  login,\n  logout,\n};\n","export const en = {\n  account: {\n    mail: \"Email\",\n    mailError: \"Invalid email adress. Please check your input.\",\n    mailRequired: \"Please enter your email adress.\",\n    password: \"Password\",\n    passwordError:\n      \"Invalid password: The password must be at least six characters long. Please check your input.\",\n    passwordRequired: \"Please enter your password.\",\n  },\n  signup: {\n    userExists:\n      \"Someone already registered using this email\" +\n      \" address. Please register using another email address. If\" +\n      \" you have forgotten your password you can reset it on the login page.\",\n    signup: \"Register\",\n    done:\n      \"We have send you an email to confirm your account. Please follow the instructions in the email to log in.\",\n  },\n  login: {\n    login: \"Log in\",\n    authWrong:\n      \"Your username or password is not correct. Please check your input.\",\n    pwForgotten: \"Password forgotten\",\n  },\n  pwForgotten: {\n    requestPwReset: \"Reset password\",\n    unknownEmail:\n      \"We could not find a user with the entered email adress. Please check your input.\",\n    done:\n      \"Don't worry, we have send you an email to the specified address.\" +\n      \" Please follow the instructions in the email to set a new password.\",\n  },\n  resetPw: {\n    noToken:\n      \"There must have happened some kind of error: This is not a\" +\n      \" proper password reset link. Please check again or contact customer\" +\n      \" support.\",\n    resetPassword: \"Set password\",\n    instructions: \"Please enter a new password:\",\n    done: \"Your password was reset successfully!\",\n    ok: \"Ok\",\n  },\n  setPw: {\n    noToken:\n      \"There must have happened some kind of error: This is not a\" +\n      \" proper password reset link. Please check again or contact customer\" +\n      \" support.\",\n    resetPassword: \"Save\",\n    instructions: \"Please enter a password:\",\n    done: \"Your password was saved!\",\n    ok: \"Next\",\n  },\n};\n\nexport const de = {\n  account: {\n    mail: \"Email\",\n    mailError: \"Unglültige Email-Addresse. Bitte überprüfen Sie Ihre Eingabe.\",\n    mailRequired: \"Bitte geben Sie Ihre Email-Addresse ein.\",\n    password: \"Passwort\",\n    passwordError:\n      \"Passwort ungültig: Ihr Passwort muss mindestens sechs Zeichen lang sein.\",\n    passwordRequired: \"Bitte geben Sie Ihr Passwort ein.\",\n  },\n  signup: {\n    userExists:\n      \"Diese Email-Adresse wurde bereits bei uns registriert.\" +\n      \" Bitte benutzen Sie eine andere Adresse. Falls\" +\n      \" Sie ihr Passwort vergessen haben sollten können Sie es \",\n    signup: \"Registrieren\",\n    done:\n      \"Wir haben Ihnen eine Email zur bestätigung Ihres Accounts geschickt. Bitte folgen Sie den Anweisungen in der Email um sich einzuloggen.\",\n  },\n  login: {\n    login: \"Jetzt einloggen\",\n    authWrong:\n      \"Nutzername oder Passwort sind falsch. Bitte überprüfen Sie Ihre Eingabe.\",\n    pwForgotten: \"Passwort vergessen\",\n  },\n  pwForgotten: {\n    requestPwReset: \"Passwort zurücksetzen\",\n    unknownEmail:\n      \"Wir konnten keinen Benutzer mit der angegenbenen E-Mail Addresse finden. Bitte überprüfen Sie Ihre Eingabe.\",\n    done:\n      \"Keine Sorge, wir haben Ihnen eine Email gesendet. Bitte folgen Sie\" +\n      \" den Instruktionen in der Email um ein neues Passwort zu vergeben.\",\n  },\n  resetPw: {\n    noToken:\n      \"Da ist etwas schiefgegangen... Der Link den Sie verwendet haben\" +\n      \" ist kein gültiger Link um ein Passwort zurückzusetzen. Bitte\" +\n      \" überprüfen Sie, ob Sie ihn richtig eingegeben haben oder\" +\n      \" kontaktieren Sie unseren den Kundenservice.\",\n    instructions: \"Bitte neues Passwort eingeben:\",\n    resetPassword: \"Passwort festlegen\",\n    done: \"Ihr Passwort wurde erfolgreich geändert!\",\n    ok: \"Ok\",\n  },\n  setPw: {\n    noToken:\n      \"Da ist etwas schiefgegangen... Der Link den Sie verwendet haben\" +\n      \" ist kein gültiger Link um ein Passwort zurückzusetzen. Bitte\" +\n      \" überprüfen Sie, ob Sie ihn richtig eingegeben haben oder\" +\n      \" kontaktieren Sie unseren den Kundenservice.\",\n    instructions: \"Bitte geben Sie ein Passwort ein:\",\n    resetPassword: \"Passwort speichern\",\n    done: \"Ihr Passwort wurde erfolgreich gespeichert!\",\n    ok: \"Weiter\",\n  },\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport { login, logout } from \"../redux/user/index\";\nimport { Formik, Form } from \"formik\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport * as defLanguages from \"../lang/index\";\n\nconst useLogin = ({\n  components: { FormikInput: InputField, Button, Link, ErrorMessage },\n  strings: languages = defLanguages,\n  api: { get },\n}) => {\n  const Login = ({\n    containerStyle,\n    onLogin = () => {},\n    onLogout = () => {},\n    login,\n    logout,\n    logMeOut,\n    apiVersion,\n    user,\n    pwForgottenUrl = \"/passwordreset\",\n    defaulLang = \"en\",\n  }) => {\n    const strings = languages[user.lang || defaulLang];\n\n    const [loading, setLoading] = useState(false);\n    const [wrong, setWrong] = useState(false);\n\n    useEffect(() => {\n      if (user.id) {\n        onLogin(user);\n      }\n    }, [user]);\n\n    useEffect(() => {\n      if (logMeOut) {\n        logout();\n        onLogout();\n      }\n    }, [logout, logMeOut]);\n\n    const onSubmit = async ({ email, password }) => {\n      if (email && password) {\n        setWrong(false);\n        setLoading(true);\n        const req = get(\"user/login\")\n          .authPW(email, password)\n          .on(400, () => {})\n          .on(401, () => {});\n        if (apiVersion) {\n          req.v(apiVersion);\n        }\n        try {\n          const me = await req;\n          setLoading(false);\n          login({ email, ...me });\n        } catch (e) {\n          if (e) {\n            alert(e);\n          }\n          setWrong(true);\n          setLoading(false);\n        }\n      } else {\n        setWrong(true);\n      }\n    };\n\n    return (\n      <Formik\n        initialValues={{ email: \"\", password: \"\" }}\n        validationSchema={Yup.object({\n          email: Yup.string()\n            .email(strings.account.mailError)\n            .required(strings.account.mailRequired),\n          password: Yup.string().required(strings.account.passwordRequired),\n        })}\n        onSubmit={onSubmit}\n      >\n        <Form style={containerStyle} className=\"login\">\n          <InputField label={strings.account.mail} name=\"email\" type=\"email\" />\n          <InputField\n            label={strings.account.password}\n            name=\"password\"\n            type=\"password\"\n          />\n          <div className=\"submit\">\n            <Button submit loading={loading}>\n              {strings.login.login}\n            </Button>\n            {wrong && <ErrorMessage message={strings.login.authWrong} />}\n          </div>\n          <div className=\"pwForgotten\">\n            <Link to={pwForgottenUrl}>{strings.login.pwForgotten}</Link>\n          </div>\n        </Form>\n      </Formik>\n    );\n  };\n  Login.propTypes = {\n    lang: PropTypes.string,\n    containerStyle: PropTypes.object,\n    apiVersion: PropTypes.number,\n    onLogin: PropTypes.func,\n    onLogout: PropTypes.func,\n    login: PropTypes.func,\n    logout: PropTypes.func,\n    logMeOut: PropTypes.bool,\n    user: PropTypes.object,\n    pwForgottenUrl: PropTypes.string,\n    defaulLang: PropTypes.string,\n  };\n\n  return useCallback(\n    connect(({ user }) => ({ user }), { login, logout })(Login),\n    [InputField, Button, Link, ErrorMessage, get, languages]\n  );\n};\n\nexport default useLogin;\n","import React, { useState, useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport * as defLanguages from \"../lang/index\";\n\nconst useSignup = ({\n  components: { FormikInput: InputField, Button, Link, ErrorMessage },\n  strings: languages = defLanguages,\n  api: { post },\n}) => {\n  const Signup = ({\n    containerStyle,\n    onSignup = () => {},\n    apiVersion,\n    user,\n    initialValues = {},\n    validation = {},\n    firstFields,\n    lastFields,\n    defaulLang = \"en\",\n    transformBeforeSend = (a) => a,\n  }) => {\n    const strings = languages[user.lang || defaulLang];\n\n    const [loading, setLoading] = useState(false);\n    const [userExists, setUserExists] = useState(false);\n    const [done, setDone] = useState(false);\n\n    const validationSchema = Yup.object({\n      email: Yup.string()\n        .email(strings.account.mailError)\n        .required(strings.account.mailRequired),\n      ...validation,\n    });\n\n    const onSubmit = async (params) => {\n      if (await validationSchema.isValid(params)) {\n        setUserExists(false);\n        setLoading(true);\n        const req = post(\"user\")\n          .data(transformBeforeSend(params))\n          .on({ status: 413, error: \"User exists\" }, () => {\n            setUserExists(true);\n          });\n        if (apiVersion) {\n          req.v(apiVersion);\n        }\n        try {\n          await req;\n          setLoading(false);\n          onSignup(params);\n          setDone(true);\n        } catch (e) {\n          if (e) {\n            alert(e);\n          }\n          setLoading(false);\n        }\n      }\n    };\n\n    if (done) {\n      return <div>{strings.signup.done}</div>;\n    }\n\n    return (\n      <Formik\n        initialValues={{ email: \"\", ...initialValues }}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        <Form style={containerStyle}>\n          {firstFields}\n          <InputField label={strings.account.mail} name=\"email\" type=\"email\" />\n          {lastFields}\n          <div>\n            <Button submit loading={loading}>\n              {strings.signup.signup}\n            </Button>\n            {userExists && <ErrorMessage message={strings.signup.userExists} />}\n          </div>\n        </Form>\n      </Formik>\n    );\n  };\n  Signup.propTypes = {\n    lang: PropTypes.string,\n    containerStyle: PropTypes.object,\n    apiVersion: PropTypes.number,\n    onSignup: PropTypes.func,\n    user: PropTypes.object,\n    pwForgottenUrl: PropTypes.string,\n    defaulLang: PropTypes.string,\n    initialValues: PropTypes.object,\n    validation: PropTypes.object,\n    firstFields: PropTypes.array,\n    lastFields: PropTypes.array,\n    transformBeforeSend: PropTypes.func,\n  };\n\n  return useCallback(connect(({ user }) => ({ user }), {})(Signup), [\n    InputField,\n    Button,\n    Link,\n    ErrorMessage,\n    post,\n    languages,\n  ]);\n};\n\nexport default useSignup;\n","import React, { useState, useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { login } from \"../redux/user/index\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport * as defLanguages from \"../lang/index\";\n\nconst useResetPassword = ({\n  components: { FormikInput: InputField, Button, Link, ErrorMessage },\n  strings: languages = defLanguages,\n  api: { put },\n}) => {\n  const ResetPassword = ({\n    containerStyle,\n    onResetPassword = () => {},\n    validatePassword = (pw) => !pw || pw.length >= 6,\n    email,\n    token,\n    onDone,\n    login,\n    apiVersion,\n    user,\n    defaulLang = \"en\",\n    welcome,\n  }) => {\n    const strings = languages[user.lang || defaulLang];\n    const resetStrings = welcome ? strings.setPw : strings.resetPw;\n\n    const [loading, setLoading] = useState(false);\n    const [tokenWrong, setTokenWrong] = useState(false);\n    const [resetDone, setResetDone] = useState(false);\n\n    const onSubmit = async ({ password }) => {\n      if (!email || !token) {\n        setTokenWrong(true);\n        return;\n      }\n      if (password) {\n        setTokenWrong(false);\n        setLoading(true);\n        const req = put(\"user\")\n          .authPW(email, token)\n          .data({ password })\n          .on({ status: 401, error: \"User not found\" }, () => {\n            setTokenWrong(true);\n          })\n          .on({ status: 400, error: \"Authorization wrong\" }, () => {\n            setTokenWrong(true);\n          });\n        if (apiVersion) {\n          req.v(apiVersion);\n        }\n        try {\n          const me = await req;\n          setLoading(false);\n          setResetDone(true);\n          login({ email, ...me });\n          onResetPassword(me);\n        } catch (e) {\n          if (e) {\n            alert(e);\n          }\n          setLoading(false);\n        }\n      }\n    };\n\n    if (resetDone) {\n      return (\n        <div>\n          <div>{resetStrings.done}</div>\n          {onDone && <Button onClick={onDone}>{resetStrings.ok}</Button>}\n        </div>\n      );\n    }\n\n    return (\n      <Formik\n        initialValues={{ password: \"\" }}\n        validationSchema={Yup.object({\n          password: Yup.string()\n            .test(\n              \"customPwCheck\",\n              strings.account.passwordError,\n              validatePassword\n            )\n            .required(strings.account.passwordRequired),\n        })}\n        onSubmit={onSubmit}\n      >\n        <Form style={containerStyle}>\n          <div>{resetStrings.instructions}</div>\n          <InputField\n            label={strings.account.password}\n            name=\"password\"\n            type=\"password\"\n          />\n          <div>\n            <Button submit loading={loading}>\n              {resetStrings.resetPassword}\n            </Button>\n            {tokenWrong && <ErrorMessage message={resetStrings.noToken} />}\n          </div>\n        </Form>\n      </Formik>\n    );\n  };\n  ResetPassword.propTypes = {\n    email: PropTypes.string,\n    token: PropTypes.string,\n    lang: PropTypes.string,\n    containerStyle: PropTypes.object,\n    apiVersion: PropTypes.number,\n    login: PropTypes.func,\n    onDone: PropTypes.func,\n    onResetPassword: PropTypes.func,\n    user: PropTypes.object,\n    defaulLang: PropTypes.string,\n    validatePassword: PropTypes.func,\n    welcome: PropTypes.bool,\n  };\n\n  return useCallback(\n    connect(({ user }) => ({ user }), { login })(ResetPassword),\n    [InputField, Button, Button, Link, ErrorMessage, put, languages]\n  );\n};\n\nexport default useResetPassword;\n","import React, { useState, useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport * as defLanguages from \"../lang/index\";\n\nconst useRequestPwReset = ({\n  components: { FormikInput: InputField, Button, ErrorMessage },\n  strings: languages = defLanguages,\n  api: { post },\n}) => {\n  const RequestPwReset = ({\n    containerStyle,\n    onRequestPwReset = () => {},\n    apiVersion,\n    user,\n    defaulLang = \"en\",\n  }) => {\n    const strings = languages[user.lang || defaulLang];\n\n    const [loading, setLoading] = useState(false);\n    const [emailUnknown, setEmailUnknown] = useState(false);\n\n    const onSubmit = async ({ email }) => {\n      if (email) {\n        setEmailUnknown(false);\n        setLoading(true);\n        const req = post(\"user/$1/reset\", [email])\n          .auth(false.auth)\n          .on(404, () => {\n            setEmailUnknown(true);\n          });\n        if (apiVersion) {\n          req.v(apiVersion);\n        }\n        try {\n          await req;\n          setLoading(false);\n          onRequestPwReset();\n        } catch (e) {\n          if (e) {\n            console.log(e);\n          }\n          setLoading(false);\n        }\n      }\n    };\n\n    return (\n      <Formik\n        initialValues={{ email: \"\" }}\n        validationSchema={Yup.object({\n          email: Yup.string()\n            .email(strings.account.mailError)\n            .required(strings.account.mailRequired),\n        })}\n        onSubmit={onSubmit}\n      >\n        <Form style={containerStyle}>\n          <InputField label={strings.account.mail} name=\"email\" type=\"email\" />\n          <div>\n            <Button submit loading={loading}>\n              {strings.pwForgotten.requestPwReset}\n            </Button>\n            {emailUnknown && (\n              <ErrorMessage message={strings.pwForgotten.unknownEmail} />\n            )}\n          </div>\n        </Form>\n      </Formik>\n    );\n  };\n  RequestPwReset.propTypes = {\n    lang: PropTypes.string,\n    containerStyle: PropTypes.object,\n    apiVersion: PropTypes.number,\n    onRequestPwReset: PropTypes.func,\n    user: PropTypes.object,\n    defaulLang: PropTypes.string,\n  };\n\n  return useCallback(connect(({ user }) => ({ user }), {})(RequestPwReset), [\n    InputField,\n    Button,\n    ErrorMessage,\n    post,\n    languages,\n  ]);\n};\n\nexport default useRequestPwReset;\n"],"names":["login","user","type","logout","en","account","mail","mailError","mailRequired","password","passwordError","passwordRequired","signup","userExists","done","authWrong","pwForgotten","requestPwReset","unknownEmail","resetPw","noToken","resetPassword","instructions","ok","setPw","de","useLogin","components","InputField","FormikInput","Button","Link","ErrorMessage","strings","languages","defLanguages","get","api","Login","containerStyle","onLogin","onLogout","logMeOut","apiVersion","pwForgottenUrl","defaulLang","lang","useState","loading","setLoading","wrong","setWrong","useEffect","id","onSubmit","email","req","authPW","on","v","me","alert","React","Formik","Yup","required","Form","propTypes","PropTypes","string","object","number","func","bool","useCallback","connect","useSignup","post","Signup","onSignup","initialValues","validation","firstFields","lastFields","transformBeforeSend","a","setUserExists","setDone","validationSchema","params","isValid","data","status","error","array","useResetPassword","put","ResetPassword","onResetPassword","validatePassword","pw","length","token","onDone","welcome","resetStrings","tokenWrong","setTokenWrong","resetDone","setResetDone","test","useRequestPwReset","RequestPwReset","onRequestPwReset","emailUnknown","setEmailUnknown","auth","console","log"],"mappings":"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"}